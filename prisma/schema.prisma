// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum OrderStatus {
  pending
  shipped
  delivered
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @map("email")
  password  String   @map("password")
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("users")
}

model Product {
  id                Int             @id @default(autoincrement())
  name              String          @map("name")
  description       String          @map("description")
  price             Float           @map("price")
  stockQuantity     Int             @map("stock_quantity")
  category          ProductCategory @relation(fields: [productCategoryId], references: [id])
  createdAt         DateTime        @default(now()) @map("created_at")
  updatedAt         DateTime        @updatedAt @map("updated_at")
  productCategoryId Int             @map("product_category_id")
  orderItems        OrderItem[]

  @@map("products")
}

model ProductCategory {
  id          Int       @id @default(autoincrement())
  name        String    @map("name")
  description String    @map("description")
  createdAt   DateTime  @default(now()) @map("created_at")
  updatedAt   DateTime  @updatedAt @map("updated_at")
  products    Product[]

  @@map("product_categories")
}

model Order {
  id         Int         @id @default(autoincrement())
  date       DateTime    @map("order_date")
  status     OrderStatus @map("status")
  totalPrice Float       @map("total_price")
  orderItems OrderItem[]
  createdAt  DateTime    @default(now()) @map("created_at")
  updatedAt  DateTime    @updatedAt @map("updated_at")

  @@map("orders")
}

model OrderItem {
  id        Int      @id @default(autoincrement())
  price     Float    @map("price")
  quantity  Int      @map("quantity")
  product   Product  @relation(fields: [productId], references: [id])
  order     Order    @relation(fields: [orderId], references: [id])
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  productId Int      @map("product_id")
  orderId   Int      @map("order_id")

  @@map("order_items")
}
